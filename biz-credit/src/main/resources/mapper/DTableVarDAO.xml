<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.biz.credit.dao.DTableVarDAO">
    <resultMap id="dTableVar_info" type="com.biz.credit.domain.DTableVar">
        <result column="var_id" property="varId" />
        <result column="table_id" property="tableId" />
        <result column="src_var_id" property="srcVarId" />
        <result column="var_period" property="varPeriod" />
        <result column="period_unit" property="periodUnit" />
        <result column="var_order" property="varOrder"/>
        <result column="cond_type" property="condType"/>
        <result column="status" property="status"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="variable_name" property="varName" />
        <result column="rule_type" property="ruleType" />
    </resultMap>
    <insert id="insert" useGeneratedKeys="true" keyProperty="dTableVar.varId" parameterType="com.biz.credit.domain.DTableVar">
       insert into t_d_table_var(table_id, src_var_id,var_period,period_unit,var_order,cond_type,status,update_time,
        create_time)
       values(#{dTableVar.tableId},#{dTableVar.srcVarId},#{dTableVar.varPeriod},#{dTableVar.periodUnit},#{dTableVar.varOrder},#{dTableVar.condType},
       #{dTableVar.status},now(),now())
    </insert>
    <select id="queryVar" resultMap="dTableVar_info">
        select t.var_id,t.table_id,t.src_var_id,t.var_period,t.period_unit,r.rule_type,b.variable_name,t.var_order,t.cond_type,t.status,t.update_time,t.create_time
        from t_d_table_var t
        left join t_d_rule_var v on t.src_var_id=v.var_id and v.status=1
		left join t_d_rule r on v.rule_id = r.rule_id and r.status=1
		left join t_variable_pool b on v.var_p_id=b.variable_code and b.valid=1
        where t.status=1 and t.table_id = #{tableId}
        order by t.var_order asc;
    </select>

    <update id="updateVar" parameterType="java.lang.Long">
        update  t_d_table_var
        set status=0
        where table_Id=#{tableId}
    </update>
    <select id="queryParentVarId"  parameterType="com.biz.credit.domain.DTableVar" resultType="java.lang.Long">
         select t.var_id
        from t_d_table_var t
        where t.status=1 and table_id = #{dTableVar.tableId} and var_order=#{dTableVar.varOrder}
    </select>
    <resultMap id="nodeParam_list" type="com.biz.credit.domain.DNodeParam">
        <result column="param_cfg_code" property="code"/>
        <result column="GROUP_CONCAT(t.param_code)" property="fields"/>
        <result column="param_name" property="name"/>
        <result column="MAX(t.required)" property="required"/>
    </resultMap>
    <select id="queryByTableId"  resultMap="nodeParam_list">
        SELECT t.param_cfg_code, t.param_name,GROUP_CONCAT(t.param_code), MAX(t.required) FROM (
		SELECT DISTINCT n.param_code, c.param_cfg_code, d.param_name, d.param_type, d.param_order, n.required FROM (
        select b.api_prod_code,b.api_version
        from t_d_table_var t
        inner join t_d_rule_var v on t.src_var_id=v.var_id and v.status=1
		inner join t_variable_pool b on v.var_p_id=b.variable_code and b.valid=1
        where t.status=1 and t.table_id =#{tableId}
        GROUP BY b.api_prod_code,b.api_version) m
        INNER JOIN (SELECT a.prod_code, a.version, b.param_code, b.param_name, b.required FROM api_admin.api a
        INNER JOIN api_admin.api_request b ON a.id = b.api_id  and b.status=1) n ON m.api_prod_code = n.prod_code AND m.api_version = n.version
        INNER JOIN api_admin.api_request_map c ON n.param_code = c.param_code
        INNER JOIN api_admin.api_param_cfg d ON c.param_cfg_code = d.param_code and d.status=1) t
        GROUP BY param_cfg_code, param_name, param_type, param_order ORDER BY param_type, param_order;

    </select>

</mapper>