<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.biz.credit.dao.ScoreCardDAO">
    <resultMap id="scoreCard_map" type="com.biz.credit.vo.ScoreCardVO">
        <result column="score_card_id" property="scoreCardId" />
        <result column="project_id" property="projectId" />
        <result column="card_code" property="cardCode" />
        <result column="card_name" property="cardName" />
        <result column="card_version" property="cardVersion"/>
        <result column="score_base" property="scoreBase"/>
        <result column="score_boundary_type" property="scoreBoundaryType"/>
        <result column="score_card_type" property="scoreCardType"/>
        <result column="publish" property="publish"/>
        <result column="calculate_type" property="calculateType"/>
        <result column="setting_weight" property="settingWeight"/>
        <result column="card_description" property="cardDescription"/>
        <collection property="scoreApiVOList" ofType="com.biz.credit.vo.ScoreApiVO"
                    javaType="java.util.ArrayList" resultMap="scoreApi_map">
        </collection>
    </resultMap>

    <resultMap id="scoreApi_map" type="com.biz.credit.vo.ScoreApiVO">
        <result column="score_api_id" property="scoreApiId" />
        <result column="api_prod_code" property="apiProdCode" />
        <result column="api_version" property="apiVersion" />
        <result column="status" property="status"/>
        <result column="var_id" property="varId"/>
        <result column="var_code" property="varCode"/>
        <result column="rule_type" property="ruleType"/>
        <result column="var_version" property="varVersion"/>
        <result column="var_name" property="varName"/>
        <result column="feq" property="feq"/>
        <result column="feq_unit" property="feqUnit"/>
        <result column="model_param_name" property="modelParamName"/>
        <result column="default_value" property="defaultValue"/>
        <result column="weight" property="weight"/>
        <result column="condition_type" property="conditionType"/>
        <result column="dimension_name" property="dimensionName"/>
        <collection property="scoreBoundaryVOList" ofType="com.biz.credit.vo.ScoreBoundaryVO"
                    javaType="java.util.ArrayList" resultMap="scoreBoundary_map">
        </collection>
    </resultMap>

    <resultMap id="scoreBoundary_map" type="com.biz.credit.vo.ScoreBoundaryVO">
        <result column="score_boundary_id" property="scoreBoundaryId" />
        <result column="score" property="score" />
        <result column="bd_left" property="bdLeft" />
        <result column="bd_right" property="bdRight"/>
        <result column="hit_value" property="hitValue"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="scoreCardVO.scoreCardId" parameterType="com.biz.credit.vo.ScoreCardVO">
        insert into t_score_card(project_id,card_code, card_name, card_version, score_base,calculate_type,setting_weight, score_boundary_type, score_card_type, status, publish, card_description,api_code,user_id, create_time, last_update_time)
        values(#{scoreCardVO.projectId},#{scoreCardVO.cardCode},#{scoreCardVO.cardName},#{scoreCardVO.cardVersion},#{scoreCardVO.scoreBase},#{scoreCardVO.calculateType},#{scoreCardVO.settingWeight},
        #{scoreCardVO.scoreBoundaryType},#{scoreCardVO.scoreCardType},#{scoreCardVO.status},#{scoreCardVO.publish},
        #{scoreCardVO.cardDescription},#{scoreCardVO.apiCode},#{scoreCardVO.userId},now(),now())
    </insert>

    <update id="update" parameterType="com.biz.credit.vo.ScoreCardVO">
        update t_score_card
        set
        <if test="null != scoreCardVO.cardCode">
            card_code = #{scoreCardVO.cardCode},
        </if>
        <if test="null != scoreCardVO.cardName">
            card_name = #{scoreCardVO.cardName},
        </if>
        <if test="null != scoreCardVO.cardVersion">
            card_version = #{scoreCardVO.cardVersion},
        </if>
        <if test="null != scoreCardVO.scoreBase">
            score_base = #{scoreCardVO.scoreBase},
        </if>
        <if test="null != scoreCardVO.calculateType">
            calculate_type = #{scoreCardVO.calculateType},
        </if>
        <if test="null != scoreCardVO.settingWeight">
            setting_weight = #{scoreCardVO.settingWeight},
        </if>
        <if test="null != scoreCardVO.scoreBoundaryType">
            score_boundary_type = #{scoreCardVO.scoreBoundaryType},
        </if>
        <if test="null != scoreCardVO.scoreCardType">
            score_card_type = #{scoreCardVO.scoreCardType},
        </if>
        <if test="null != scoreCardVO.status">
            status = #{scoreCardVO.status},
        </if>
        <if test="null != scoreCardVO.publish">
            publish = #{scoreCardVO.publish},
        </if>
        <if test="null != scoreCardVO.cardDescription">
            card_description = #{scoreCardVO.cardDescription},
        </if>
        last_update_time = now()
        WHERE score_card_id = #{scoreCardVO.scoreCardId}
    </update>

    <select id="queryById" resultMap="scoreCard_map">
        select c.score_card_id,c.project_id,c.card_code,c.card_name,c.card_version,c.score_base,c.score_boundary_type,c.calculate_type,c.setting_weight,
        c.score_card_type,c.publish,c.card_description,a.score_api_id,a.api_prod_code,a.api_version,a.var_id,
        a.var_code,a.var_version,a.var_name,a.feq,a.feq_unit,a.model_param_name,a.default_value,a.weight,
        a.condition_type,a.dimension_name,b.score_boundary_id,b.score,b.bd_left,b.bd_right,b.hit_value,r.rule_type
        from t_score_card c left join t_score_api a on c.score_card_id=a.score_card_id and a.status = 1
        left join t_score_boundary b on b.score_api_id = a.score_api_id and b.status = 1
        left join t_d_rule_var rv on rv.var_id = a.var_id and rv.status = 1
        left join t_d_rule r on r.rule_id = rv.rule_id and r.status = 1
        where c.score_card_id = #{scoreCardId} and c.status = 1
    </select>

    <select id="queryCountByCardName" resultType="int">
        select count(*) from t_score_card where card_name = #{scoreCardVO.cardName} and status = 1 and project_id = #{scoreCardVO.projectId}
    </select>

    <select id="queryMaxVersionByCardName" resultType="string">
        select max(version) from t_score_card where card_name = #{scoreCardVO.cardName} and status = 1 and project_id = #{scoreCardVO.projectId}
    </select>

    <select id="queryVersionListByCardName" resultType="com.biz.credit.vo.ScoreCardVO">
        select score_card_id,card_code,card_name,card_version,score_base,publish,card_description from t_score_card
        where card_name = #{scoreCardVO.cardName} and status = 1 and project_id = #{scoreCardVO.projectId} order by card_version asc
    </select>

    <select id="queryAllMaxVersionList" resultType="com.biz.credit.vo.ScoreCardVO">
      select * from (
        select score_card_id,project_id,card_code,card_name,card_version,score_base,user_id,api_code,publish,card_description,create_time,last_update_time
          from t_score_card
         where status = 1
           and api_code = #{apiCode}
        <if test="projectId != null">
           and project_id = #{projectId}
        </if>
         order by card_version desc limit 99999999) a
       group by card_name order by last_update_time desc
    </select>

    <select id="queryListByProjectId" resultType="com.biz.credit.domain.ScoreCard">
        select score_card_id,card_code,card_name,card_version,score_base,publish,card_description,create_time,last_update_time
        from t_score_card where status = 1 and project_id = #{projectId}
    </select>


    <resultMap id="scoreCard_list" type="com.biz.credit.vo.ScoreCardVO">
        <result column="name" property="projectName" />
        <result column="score_card_id" property="scoreCardId" />
        <result column="project_id" property="projectId" />
        <result column="card_code" property="cardCode" />
        <result column="card_name" property="cardName" />
        <result column="card_version" property="cardVersion"/>
        <result column="score_base" property="scoreBase"/>
        <result column="score_boundary_type" property="scoreBoundaryType"/>
        <result column="score_card_type" property="scoreCardType"/>
        <result column="publish" property="publish"/>
        <result column="calculate_type" property="calculateType"/>
        <result column="setting_weight" property="settingWeight"/>
        <result column="card_description" property="cardDescription"/>
        <result column="create_time" property="createTime"/>
        <result column="last_update_time" property="lastUpdateTime"/>
        <result column="choose" property="choose"/>
        <result column="judge" property="judge"/>
        <result column="type" property="type"/>
    </resultMap>
    <select id="queryScoreCardList"  resultMap="scoreCard_list">
         select  p.name,t.score_card_id,t.project_id,t.card_code ,t.card_name,t.card_version ,t.score_base,t.calculate_type,t.setting_weight,
        t.score_boundary_type,t.score_card_type,t.user_id,t.api_code,t.status,t.publish,t.card_description,t.create_time,t.last_update_time
        from  t_score_card t
		inner join t_project p on t.project_id=p.id and p.status=1
        where  t.status =1 and t.publish=1 and p.api_code=#{apiCode}
        order by p.name,t.card_name,t.card_version asc;
    </select>
    <select id="findScoreCardList" parameterType="com.biz.credit.domain.DNodeModel" resultMap="scoreCard_list">
       select p.name,t.score_card_id,t.project_id,t.card_code ,t.card_name,t.card_version ,t.score_base,t.calculate_type,t.setting_weight,
        t.score_boundary_type,t.score_card_type,t.user_id,t.api_code,t.status,t.publish,t.card_description,t.create_time,t.last_update_time,case when m.model_code is null then false else true end as choose,th.judge,th.type
        from t_score_card t
        inner join t_project p on t.project_id=p.id and p.status=1
         left join t_d_node_model m
        on m.model_type = #{dNodeModel.modelType}
        and m.node_id = #{dNodeModel.nodeId}
        and m.model_code = t.score_card_id and m.status = 1
        left join t_d_threshold th on th.model_id = m.model_id
        where t.status = 1 and t.api_code =#{dNodeModel.apiCode}
        order by p.name,t.card_name,t.card_version asc;
    </select>


    <resultMap id="scoreApi_list" type="com.biz.credit.domain.ScoreApi">
        <result column="score_api_id" property="scoreApiId" />
        <result column="api_prod_code" property="apiProdCode" />
        <result column="api_version" property="apiVersion" />
        <result column="status" property="status"/>
        <result column="var_id" property="varId"/>
        <result column="var_code" property="varCode"/>
        <result column="var_version" property="varVersion"/>
        <result column="var_name" property="varName"/>
        <result column="feq" property="feq"/>
        <result column="feq_unit" property="feqUnit"/>
        <result column="model_param_name" property="modelParamName"/>
        <result column="default_value" property="defaultValue"/>
        <result column="weight" property="weight"/>
        <result column="condition_type" property="conditionType"/>
        <result column="create_time" property="createTime"/>
        <result column="last_update_time" property="lastUpdateTime"/>
        <result column="dimension_name" property="dimensionName"/>
    </resultMap>
    <select id="queryScoreApiList" parameterType="long"  resultMap="scoreApi_list">
        select  t.score_api_id,t.api_prod_code,t.api_version ,t.score_card_id,t.status ,t.var_id,t.var_code,t.var_version,
        t.var_name,t.feq,t.feq_unit,t.model_param_name,t.default_value,t.weight,t.condition_type,t.create_time,t.last_update_time,t.dimension_name
        from  t_score_api t
        where t.score_card_id = #{scoreCardId} and t.status =1;
    </select>
    <resultMap id="scoreBoundary_list" type="com.biz.credit.domain.ScoreBoundary">
        <result column="score_boundary_id" property="scoreBoundaryId" />
        <result column="score" property="score" />
        <result column="bd_left" property="bdLeft" />
        <result column="bd_right" property="bdRight"/>
        <result column="hit_value" property="hitValue"/>
    </resultMap>
    <select id="queryScoreBoundaryList" parameterType="long"  resultMap="scoreBoundary_list">
        select  t.score_boundary_id,t.score_api_id,t.score ,t.bd_left,t.bd_right ,t.hit_value,t.status,t.create_time,
        t.last_update_time
        from  t_score_boundary t
        where t.score_api_id = #{scoreApiId} and t.status =1;
    </select>
</mapper>